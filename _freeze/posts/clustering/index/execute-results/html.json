{
  "hash": "1b953857f6fc825502cf741b2bea7cbf",
  "result": {
    "markdown": "# Clustering in Machine Learning with Python\n\n---\ntitle: \"Clustering\"\nauthor: \"Mohaimin\"\ndate: \"2023-12-01\"\ncategories: [code]\n---\n\n## Introduction\n\nMachine learning is a field that has transformed the way we analyze and extract insights from data. One of the fundamental techniques in this field is **clustering**. Clustering allows us to group similar data points together based on their features or characteristics, making it an essential tool for various applications like customer segmentation, anomaly detection, and more.\n\nIn this blog post, we will dive into the world of clustering in machine learning using Python within the RStudio environment. We'll explore the concept of clustering, discuss some common clustering algorithms, and provide practical examples.\n\n## What is Clustering?\n\nClustering is a type of unsupervised learning where we aim to identify natural groupings within a dataset. Unlike supervised learning, clustering does not require labeled data. Instead, it divides the data into clusters based on the inherent similarities between data points.\n\n### K-Means Clustering\n\nOne of the most popular clustering algorithms is **K-Means**. K-Means partitions the data into 'K' clusters, with each cluster represented by its centroid. The algorithm iteratively assigns data points to the nearest centroid and updates the centroids until convergence.\n\nHere's a Python example using scikit-learn to perform K-Means clustering:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Import necessary libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\n\n# Generate random data for demonstration\ndata = np.random.rand(100, 2)\n\n# Create a K-Means model with 3 clusters\nkmeans = KMeans(n_clusters=3)\nkmeans.fit(data)\n\n# Visualize the clustering results\nplt.scatter(data[:, 0], data[:, 1], c=kmeans.labels_)\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=200, marker='X', c='red', label='Centroids')\nplt.title(\"K-Means Clustering\")\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/bota/Files/VT/Course Materials/Fall 23/ML Blog/vscode/mlblog/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  super()._check_params_vs_input(X, default_n_init=10)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=571 height=431}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}